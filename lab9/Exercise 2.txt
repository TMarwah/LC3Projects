ex1q1:
39 lines of assembly are required for this C++ code

ex1q2:
It has about 28 lines more

ex1q3:
Line 8 is a call to <<
call    std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)


ex1q4:
It is now called _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc

ex1q5:
    .LC0:
            .string "Hello, world! %d \n"
    main:
            push    rbp
            mov     rbp, rsp
            mov     esi, 10
            mov     edi, OFFSET FLAT:.LC0
            mov     eax, 0
            call    printf
            mov     eax, 0
            pop     rbp
            ret

ex1q6:
    .LC0:
            .string "Hello, world! %d \n"
    main:
            sub     rsp, 8
            mov     esi, 10
            mov     edi, OFFSET FLAT:.LC0
            mov     eax, 0
            call    printf
            mov     eax, 0
            add     rsp, 8
            ret

ex1q7:
11 lines of code are generated with the -O1 compiler option

ex1q8:
    .LC0:
            .string "Hello, world! %d \n"
    main:
            sub     rsp, 8
            mov     esi, 10
            mov     edi, OFFSET FLAT:.LC0
            xor     eax, eax
            call    printf
            xor     eax, eax
            add     rsp, 8
            ret   

ex1q9:
The "mov eax, 0" lines are replaced with xor

ex1q10:
    .LC0:
            .string "Hello, world! %d \n"
    main:
            sub     rsp, 8
            mov     esi, 10
            mov     edi, OFFSET FLAT:.LC0
            xor     eax, eax
            call    printf
            xor     eax, eax
            add     rsp, 8
            ret

ex1q11:
There is no difference